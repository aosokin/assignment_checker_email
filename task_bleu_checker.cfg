[General]
# e-mail for the course
course_e_mail=course.email@gmail.com
# password to access gmail
course_e_mail_password=course.email.password
# file with the list of all students, created manually, can be shared among multiple tasks, see student_list.csv for an example
student_list_file=student_list.csv
# file to store grades, created automatically, one per each task
student_score_file=taskX_scores.csv
# e-mail where to write in case of unregistered students and some problems
teacher_email=teacher@gmail.com
# delay between the two e-mail checks, not to overload the connection
email_check_pause_minutes=10
[Assignment]
# gmail label to store the e-mails parsed by the system
gmail_label=TaskX
# name of the task used in communication with students
task_name=Task X
# path to store student solutions, contains everything students send
solutions_path=./taskX_student_solutions
# number of tests for the assignment
number_tests=1
# score mode - max of min
score_mode=max
#pattern for the names of the test solutions, %%d - the index of a test (1-based)
test_pattern=test%%d.de-en.en
# command to launch the checker; has to contain %%s three times for the three file names: test data file, teacher-provided answer, student answer; not all the three files have to be actually read
checker_cmd=bash ./checkers/checker_bleu_public_data.sh "%%s" "%%s" "%%s"
# pattern for files containing test data
test_data_pattern=./data/test%%d.de-en.en
# pattern for files containing teacher-provided answer
test_groundtruth_pattern=./data/baseline%%d
# folder to store e-mails, if sending failed (just in case)
failed_emails_path=taskX_unsent_emails
# the assignment deadline: Year-Mon-Date-Hours:Min:Sec
deadline=2019-11-06-23:59:59-MSK
deadline_hard=2019-11-13-23:59:59-MSK
# timezone (pytz names) for the deadlines can be provided
timezone=Europe/Moscow
# grade penalty for each day of delay after the deadline
delay_day_penalty=1.0
# maximum allowed delay penalty
delay_cap=7.0
# score threshold to accept the assignment
acceptance_threshold=0.0
# score for non-accepted solution
score_non_accepted=0.0
# maximum score per all the tests, used in communication with students, should be sum of the scores for all the tests
max_score=10.0
min_score=0.0
[Leaderboard]
# Leaderboard in a Google spreadsheet
use_leaderboard=True
google_credentials_file=credentials.json
google_token_file=token.pickle
spreadsheet_id=SPREAD_SHEET_ID
# max of min leaderboard
leaderboard_direction=max
leaderboard_entry_threshold=25.46
#pattern for the leaderboards: %%d - the index of a test (1-based)
leaderboard_name=Leaderboard-test%%d
local_leader_board_file=taskX_leaderboard_test%%d.csv
# separate checker to compute private leaderboard
use_private_split_after_competition=True
checker_cmd_private_data=bash ./checkers/checker_bleu_private_data.sh "%%s" "%%s" "%%s"
